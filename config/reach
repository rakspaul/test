# Reach
upstream REACH {
  server 0.0.0.0:8080;
}

# Reach
server {
  listen 80;
  server_name qa-reach.collective.com;
  rewrite ^(.*) https://$host$1 redirect;

  root /home/amp/reachui/current/public;
  access_log /home/amp/reachui/current/log/nginx.access.log;
}

server {
  listen 74.86.193.142:443 default ssl;
  server_name qa-reach.collective.com;

  ssl on;
  ssl_certificate         /etc/ssl/nginx/collective.com.crt;
  ssl_certificate_key     /etc/ssl/nginx/collective.com.key;

  root /home/amp/reachui/current/public;
  access_log /home/amp/reachui/current/log/nginx.access.log;
  error_log /home/amp/reachui/current/log/nginx.error.log;

  error_page 500 502 503 504 /500.html;
  client_max_body_size 50M;

  # First rewrite rule for handling maintenance page.
  # Hmm.. would be nice to check the request
  # and return either xml or html response
  if (-f $document_root/system/maintenance.html) {
    rewrite ^(.*)$ /system/maintenance.html last;
    break;
  }

  location / {
    index index.html index.htm

    # Forward information about the client and host
    # Otherwise our Rails app wouldn't have access to it
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_max_temp_file_size 0;
    proxy_read_timeout 1800;

    # serve gziped static assets
    location ~ ^/(assets)/  {
      root /home/amp/reachui/current/public;
      gzip_static on; # to serve pre-gzipped version
      expires max;
      add_header Cache-Control public;
    }

    if (-f $request_filename) {
      break;
    }

    # Directly serve cached pages
    if (-f $request_filename.html) {
      rewrite (.*) $1.html break;
    }

    # Otherwise let Mongrel handle the request
    if (!-f $request_filename) {
      proxy_pass http://REACH;
      break;
    }
  }
}

# Proxy Cache for CDB APIs from cdesk-api calls
proxy_cache_path /var/www/nginx_cache levels=1:2 keys_zone=cdb-proxy:60m max_size=1g inactive=5h;
proxy_temp_path /var/www/nginx_temp;


server {
    listen      127.0.0.1:9080;
    # Dummy hostname needs to be added in /etc/hosts
    server_name  cdb.collective-media.export.net;

    location ~*/(export|delivery\/data)*$ {

        rewrite ~*/(export|delivery\/data)*$ /$1 break;

        proxy_pass http://cm.stgcdb.collective-media.net;
        proxy_cache_key $scheme$host$uri$is_args$args;

        proxy_cache cdb-proxy;
        proxy_cache_valid 10m;
        proxy_cache_use_stale error
                            timeout
                            invalid_header
                            http_500
                            http_502
                            http_504
                            http_404;

        proxy_redirect     off;

        proxy_set_header   Host             "cm.stgcdb.collective-media.net";
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_max_temp_file_size 10m;

        client_max_body_size       10m;
        client_body_buffer_size    128k;

        proxy_connect_timeout      180;
        proxy_send_timeout         180;
        proxy_read_timeout         180;
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }
}
